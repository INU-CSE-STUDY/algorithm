package programmers.lv2;

/* 프로그래머스 148653번 마법의 엘리베이터 문제

[문제 풀이]
엘리베이터 층수 각 자릿수가 4 이하면 -1 하는게 이득이고, 6 이상이면 +1 하는게 이득
5는 올라가나 내려가나 똑같음! 상관없음
- 이렇게 생각했는데, 5 일 때 올라가나 내려가나의 차이 때문에 그 다음 수에 영향을 줘버려서 틀리는 것 같음
- 15555 같은 건 더하기 하는 것보다 빼기 하는게 더 최소 횟수를 보장함, 이렇게 앞 자릿수에 따라 영향을 줌..
  내 생각엔 두자릿수 기준으로 그 앞자리가 4이하인지 5이상인지도 구분이 필요한듯;

16 예시)
- 16 % 10 = 6 => 1의 자리가 6 이상, +1 하는게 이득 => 4번
- 20 / 10 = 2, 2 % 10 = 2 => 그 다음 자릿수가 4 이하, -1(실제로는 -10) 하는게 이득 => 2번
=> 4 + 2 = 6

2554 예시)
- 2554 % 10 = 4 => 1의 자리가 4 이하, -1 하는게 이득 => 4번
- 2550 / 10 = 255, 255 % 10 = 6 => 1의 자리가 5, +1/-1 상관 없이 5번 => 5번
- 250 / 10 = 25, 25 % 10 = 5 => 1의 자리가 5, +1/-1 상관 없이 5번 => 5번
- 20 / 10 = 2, 2 % 10 = 2 => 1의 자리가 4 이하, -1 하는게 이득 => 2번
=> 4 + 5 + 5 + 2 = 16

*/

class Q148653_kj {
    public int solution(int storey) {
        int answer = 0;

        while (storey != 0) {
            int num1 = storey % 10;
            int num2 = (storey / 10) % 10;

            boolean isMinusCase = false;
            if (num1 < 5 || (num2 < 5 && num1 == 5)) {
                // 마지막 자릿수가 4 이하인 경우는 빼는 것이, 6 이상일 경우는 더하는 것이 횟수가 적음
                // 자릿수가 5일 때는 앞 자릿수가 5 미만일 때(0 포함)는 빼주는게 이득이고, 아닌 경우엔 더하는게 이득
                isMinusCase = true;
            }

            while (storey % 10 != 0) {
                if (isMinusCase) storey--;
                else storey++;

                answer++;
            }

            // 다음 자릿수 계산을 위해 10 나눠주기
            storey /= 10;
        }

        return answer;
    }
}
